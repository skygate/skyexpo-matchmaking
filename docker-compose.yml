---

# Default compose file for development and production.
# Should be used directly in development.
# Automatically loads `docker-compose.override.yml` if it exists.
# No extra steps required.
# Should be used together with `docker/docker-compose.prod.yml`
# in production.

version: "3.7"
services:
  db:
    image: "postgres:9.6.9-alpine"
    container_name: skyexpo-db
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    env_file: ./backend/config/.env

  rabbitmq:
    image: "bitnami/rabbitmq"
    container_name: skyexpo-rabbitmq
    restart: unless-stopped
    networks:
      - webnet
    env_file: ./backend/config/.env

  web:
    <<: &web
      build:
        target: development_build
        context: ./backend
        dockerfile: ./docker/django/Dockerfile
        cache_from:
          - registry.hal.skygate.io/skyexpo-web
        args:
          DJANGO_ENV: development
      image: registry.hal.skygate.io/skyexpo-web
      container_name: skyexpo-web
      volumes:
        - django-static:/var/www/django/static
      depends_on:
        - db
      networks:
        - webnet
        - proxynet
      env_file: ./backend/config/.env
      environment:
        DJANGO_DATABASE_HOST: db
    command: python -Wd manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: curl --fail http://localhost:8000/health/?format=json || exit 1
      interval: 1m
      timeout: 5s
      retries: 2
      start_period: 1m

  celery-worker:
    <<: *web
    container_name: skyexpo-celery
    depends_on:
      - web
      - db
      - rabbitmq
    command: celery -A server worker -l info

  web-app:
    container_name: skyexpo-webapp
    build:
      context: ./web-app
    restart: unless-stopped
    image: skyexpo_web-app
    networks:
      - webnet
      - proxynet

networks:
  # Network for your proxy server and application to connect them,
  # do not use it for anything else!
  proxynet:
  # Network for your internals, use it by default:
  webnet:

volumes:
  pgdata:
  django-static:
  django-media:
